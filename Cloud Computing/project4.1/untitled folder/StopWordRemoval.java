package edu.cmu;

import java.io.IOException;
import java.util.*;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.util.*;
import java.util.HashSet;

public class StopWordRemoval {
	public static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, Text> {
		private Text word = new Text();
		private Text loc = new Text();
		public void map(LongWritable key, Text value, OutputCollector<Text, Text> output, Reporter reporter) throws IOException {
			HashSet<String> set = new HashSet<String>();
			set.add("a");
			set.add("able");
			set.add("about");
			set.add("above");
			set.add("according");
			set.add("accordingly");
			set.add("across");
			set.add("actually");
			set.add("after");
			set.add("afterwards");
			set.add("again");
			set.add("against");
			set.add("all");
			set.add("allow");
			set.add("allows");
			set.add("almost");
			set.add("alone");
			set.add("along");
			set.add("already");
			set.add("also");
			set.add("although");
			set.add("always");
			set.add("am");
			set.add("among");
			set.add("amongst");
			set.add("an");
			set.add("and");
			set.add("another");
			set.add("any");
			set.add("anybody");
			set.add("anyhow");
			set.add("anyone");
			set.add("anything");
			set.add("anyway");
			set.add("anyways");
			set.add("anywhere");
			set.add("apart");
			set.add("appear");
			set.add("appreciate");
			set.add("appropriate");
			set.add("are");
			set.add("around");
			set.add("as");
			set.add("aside");
			set.add("ask");
			set.add("asking");
			set.add("associated");
			set.add("at");
			set.add("available");
			set.add("away");
			set.add("awfully");
			set.add("b");
			set.add("be");
			set.add("became");
			set.add("because");
			set.add("become");
			set.add("becomes");
			set.add("becoming");
			set.add("been");
			set.add("before");
			set.add("beforehand");
			set.add("behind");
			set.add("being");
			set.add("believe");
			set.add("below");
			set.add("beside");
			set.add("besides");
			set.add("best");
			set.add("better");
			set.add("between");
			set.add("beyond");
			set.add("both");
			set.add("brief");
			set.add("but");
			set.add("by");
			set.add("c");
			set.add("came");
			set.add("can");
			set.add("cannot");
			set.add("cant");
			set.add("cause");
			set.add("causes");
			set.add("certain");
			set.add("certainly");
			set.add("changes");
			set.add("clearly");
			set.add("co");
			set.add("com");
			set.add("come");
			set.add("comes");
			set.add("concerning");
			set.add("consequently");
			set.add("consider");
			set.add("considering");
			set.add("contain");
			set.add("containing");
		    set.add("contains");
		    set.add("corresponding");
		    set.add("could");
		    set.add("course");
		    set.add("currently");
		    set.add("d");
		    set.add("definitely");
		    set.add("described");
		    set.add("despite");
		    set.add("did");
		    set.add("different");
		    set.add("do");
		    set.add("does");
		    set.add("doing");
		    set.add("done");
		    set.add("down");
		    set.add("downwards");
		    set.add("during");
		    set.add("e");
		    set.add("each");
		    set.add("edu");
		    set.add("eg");
		    set.add("eight");
		    set.add("either");
		    set.add("else");
		    set.add("elsewhere");
		    set.add("enough");
		    set.add("entirely");
		    set.add("especially");
		    set.add("et");
		    set.add("etc");
		    set.add("even");
		    set.add("ever");
		    set.add("every");
		    set.add("everybody");
		    set.add("everyone");
		    set.add("everything");
		    set.add("everywhere");
		    set.add("ex");
		    set.add("exactly");
		    set.add("example");
		    set.add("except");
		    set.add("f");
		    set.add("far");
		    set.add("few");
		    set.add("fifth");
		    set.add("first");
		    set.add("five");
		    set.add("followed");
		    set.add("following");
		    set.add("follows");
		    set.add("for");
		    set.add("former");
		    set.add("formerly");
		    set.add("forth");
		    set.add("four");
		    set.add("from");
		    set.add("further");
		    set.add("furthermore");
		    set.add("g");
		    set.add("get");
		    set.add("gets");
		    set.add("getting");
		    set.add("given");
		    set.add("gives");
		    set.add("go");
		    set.add("goes");
		    set.add("going");
		    set.add("gone");
		    set.add("got");
		    set.add("gotten");
		    set.add("greetings");
		    set.add("h");
		    set.add("had");
		    set.add("happens");
		    set.add("hardly");
		    set.add("has");
		    set.add("have");
		    set.add("having");
		    set.add("he");
		    set.add("hello");
		    set.add("help");
		    set.add("hence");
		    set.add("her");
		    set.add("here");
		    set.add("hereafter");
		    set.add("hereby");
		    set.add("herein");
		    set.add("hereupon");
		    set.add("hers");
		    set.add("herself");
		    set.add("hi");
		    set.add("him");
		    set.add("himself");
		    set.add("his");
		    set.add("hither");
		    set.add("hopefully");
		    set.add("how");
		    set.add("howbeit");
		    set.add("however");
		    set.add("i");
		    set.add("ie");
		    set.add("if");
		    set.add("ignored");
		    set.add("immediate");
		    set.add("in");
		    set.add("inasmuch");
		    set.add("inc");
		    set.add("indeed");
		    set.add("indicate");
		    set.add("indicated");
		    set.add("indicates");
		    set.add("inner");
		    set.add("insofar");
		    set.add("instead");
		    set.add("into");
		    set.add("inward");
		    set.add("is");
		    set.add("it");
		    set.add("its");
		    set.add("itself");
		    set.add("j");
		    set.add("just");
		    set.add("k");
		    set.add("keep");
		    set.add("keeps");
		    set.add("kept");
		    set.add("know");
		    set.add("knows");
		    set.add("known");
		    set.add("l");
		    set.add("last");
		    set.add("lately");
		    set.add("later");
		    set.add("latter");
		    set.add("latterly");
		    set.add("least");
		    set.add("less");
		    set.add("lest");
		    set.add("let");
		    set.add("like");
		    set.add("liked");
		    set.add("likely");
		    set.add("little");
		    set.add("ll");
		    set.add("look");
		    set.add("looking");
		    set.add("looks");
		    set.add("ltd");
		    set.add("m");
		    set.add("mainly");
		    set.add("many");
		    set.add("may");
		    set.add("maybe");
		    set.add("me");
		    set.add("mean");
		    set.add("meanwhile");
		    set.add("merely");
		    set.add("might");
		    set.add("more");
		    set.add("moreover");
		    set.add("most");
		    set.add("mostly");
		    set.add("much");
		    set.add("must");
		    set.add("my");
		    set.add("myself");
		    set.add("n");
		    set.add("name");
		    set.add("namely");
		    set.add("nd");
		    set.add("near");
		    set.add("nearly");
		    set.add("necessary");
		    set.add("need");
		    set.add("needs");
		    set.add("neither");
		    set.add("never");
		    set.add("nevertheless");
		    set.add("new");
		    set.add("next");
		    set.add("nine");
		    set.add("no");
		    set.add("nobody");
		    set.add("non");
		    set.add("none");
		    set.add("noone");
		    set.add("nor");
		    set.add("normally");
		    set.add("not");
		    set.add("nothing");
		    set.add("novel");
		    set.add("now");
		    set.add("nowhere");
		    set.add("o");
		    set.add("obviously");
		    set.add("of");
		    set.add("off");
		    set.add("often");
		    set.add("oh");
		    set.add("ok");
		    set.add("okay");
		    set.add("old");
		    set.add("on");
		    set.add("once");
		    set.add("one");
		    set.add("ones");
		    set.add("only");
		    set.add("onto");
		    set.add("or");
		    set.add("other");
		    set.add("others");
		    set.add("otherwise");
		    set.add("ought");
		    set.add("our");
		    set.add("ours");
		    set.add("ourselves");
		    set.add("out");
		    set.add("outside");
		    set.add("over");
		    set.add("overall");
		    set.add("own");
		    set.add("p");
		    set.add("particular");
		    set.add("particularly");
		    set.add("per");
		    set.add("perhaps");
		    set.add("placed");
		    set.add("please");
		    set.add("plus");
		    set.add("possible");
		    set.add("presumably");
		    set.add("probably");
		    set.add("provides");
		    set.add("q");
		    set.add("que");
		    set.add("quite");
		    set.add("qv");
		    set.add("r");
		    set.add("rather");
		    set.add("rd");
		    set.add("re");
		    set.add("really");
		    set.add("reasonably");
		    set.add("regarding");
		    set.add("regardless");
		    set.add("regards");
		    set.add("relatively");
		    set.add("respectively");
		    set.add("right");
		    set.add("s");
		    set.add("said");
		    set.add("same");
		    set.add("saw");
		    set.add("say");
		    set.add("saying");
		    set.add("says");
		    set.add("second");
		    set.add("secondly");
		    set.add("see");
		    set.add("seeing");
		    set.add("seem");
		    set.add("seemed");
		    set.add("seeming");
		    set.add("seems");
		    set.add("seen");
		    set.add("self");
		    set.add("selves");
		    set.add("sensible");
		    set.add("sent");
		    set.add("serious");
		    set.add("seriously");
		    set.add("seven");
		    set.add("several");
		    set.add("shall");
		    set.add("she");
		    set.add("should");
		    set.add("since");
		    set.add("six");
		    set.add("so");
		    set.add("some");
		    set.add("somebody");
		    set.add("somehow");
		    set.add("someone");
		    set.add("something");
		    set.add("sometime");
		    set.add("sometimes");
		    set.add("somewhat");
		    set.add("somewhere");
		    set.add("soon");
		    set.add("sorry");
		    set.add("specified");
		    set.add("specify");
		    set.add("specifying");
		    set.add("still");
		    set.add("sub");
		    set.add("such");
		    set.add("sup");
		    set.add("sure");
		    set.add("t");
		    set.add("take");
		    set.add("taken");
		    set.add("tell");
		    set.add("tends");
		    set.add("th");
		    set.add("than");
		    set.add("thank");
		    set.add("thanks");
		    set.add("thanx");
		    set.add("that");
		    set.add("thats");
		    set.add("the");
		    set.add("their");
		    set.add("theirs");
		    set.add("them");
		    set.add("themselves");
		    set.add("then");
		    set.add("thence");
		    set.add("there");
		    set.add("thereafter");
		    set.add("thereby");
		    set.add("therefore");
		    set.add("therein");
		    set.add("theres");
		    set.add("thereupon");
		    set.add("these");
		    set.add("they");
		    set.add("think");
		    set.add("third");
		    set.add("this");
		    set.add("thorough");
		    set.add("thoroughly");
		    set.add("those");
		    set.add("though");
		    set.add("three");
		    set.add("through");
		    set.add("throughout");
		    set.add("thru");
		    set.add("thus");
		    set.add("to");
		    set.add("together");
		    set.add("too");
		    set.add("took");
		    set.add("toward");
		    set.add("towards");
		    set.add("tried");
		    set.add("tries");
		    set.add("truly");
		    set.add("try");
		    set.add("trying");
		    set.add("twice");
		    set.add("two");
		    set.add("u");
		    set.add("un");
		    set.add("under");
		    set.add("unfortunately");
		    set.add("unless");
		    set.add("unlikely");
		    set.add("until");
		    set.add("unto");
		    set.add("up");
		    set.add("upon");
		    set.add("us");
		    set.add("use");
		    set.add("used");
		    set.add("useful");
		    set.add("uses");
		    set.add("using");
		    set.add("usually");
		    set.add("uucp");
		    set.add("v");
		    set.add("value");
		    set.add("various");
		    set.add("ve");
		    set.add("very");
		    set.add("via");
		    set.add("viz");
		    set.add("vs");
		    set.add("w");
		    set.add("want");
		    set.add("wants");
		    set.add("was");
		    set.add("way");
		    set.add("we");
		    set.add("welcome");
		    set.add("well");
		    set.add("went");
		    set.add("were");
		    set.add("what");
		    set.add("whatever");
		    set.add("when");
		    set.add("whence");
		    set.add("whenever");
		    set.add("where");
		    set.add("whereafter");
		    set.add("whereas");
		    set.add("whereby");
		    set.add("wherein");
		    set.add("whereupon");
		    set.add("wherever");
		    set.add("whether");
		    set.add("which");
		    set.add("while");
		    set.add("whither");
		    set.add("who");
		    set.add("whoever");
		    set.add("whole");
		    set.add("whom");
		    set.add("whose");
		    set.add("why");
		    set.add("will");
		    set.add("willing");
		    set.add("wish");
		    set.add("with");
		    set.add("within");
		    set.add("without");
		    set.add("wonder");
		    set.add("would");
		    set.add("would");
		    set.add("x");
		    set.add("y");
		    set.add("yes");
		    set.add("yet");
		    set.add("you");
		    set.add("your");
		    set.add("yours");
		    set.add("yourself");
		    set.add("yourselves");
		    set.add("z");
		    set.add("zero");
			FileSplit fs = (FileSplit) reporter.getInputSplit();
			String location = fs.getPath().getName();
			loc.set(location);
			String line = value.toString();
			StringTokenizer tokenizer = new StringTokenizer(line.toLowerCase());
			while (tokenizer.hasMoreTokens()) {
				if (set.contains(word.toString())) {
					continue;
				} else {
					word.set(tokenizer.nextToken());
					output.collect(word, loc);
				}
			}
		}
	}
	
	public static class Reduce extends MapReduceBase implements Reducer<Text, Text, Text, Text> {
		public void reduce(Text key, Iterator<Text> values, OutputCollector<Text, Text> output, Reporter reporter) throws IOException {
			boolean first = true;
			StringBuilder result = new StringBuilder();
            HashSet<String> set = new HashSet<String>();
			while (values.hasNext()) {
				if (!set.contains(values.toString())){
					if (!first) {
						result.append(" ");
					}
					first = false;
					result.append(values.toString());
					set.add(values.next().toString());
				}
			}
			
			output.collect(key, new Text(result.toString()));
		}
	}
	
	public static void main(String[] args) throws Exception {
		JobConf conf = new JobConf(InvertedIndex.class);
		
		conf.setJobName("InvertedIndex");
		
		conf.setOutputKeyClass(Text.class);
		conf.setOutputValueClass(Text.class);
		
		conf.setMapperClass(Map.class);
		conf.setCombinerClass(Reduce.class);
		conf.setReducerClass(Reduce.class);
		
		conf.setInputFormat(TextInputFormat.class);
		conf.setOutputFormat(TextOutputFormat.class);
		
		FileInputFormat.setInputPaths(conf, new Path(args[0]));
		FileOutputFormat.setOutputPath(conf, new Path(args[1]));
		
		JobClient.runJob(conf);
	}
}
